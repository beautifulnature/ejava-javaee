<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
        
    <parent>
        <groupId>ejava.javaee.projects.eDataShare.eDmv</groupId>
        <artifactId>eDmv</artifactId>
        <version>2.0.2011.1-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>eDmvDAO</artifactId>
    <name>eDMV DAO</name>
    <description>
        This project provides a sparse example of how to setup a JDBC and JPA
        DAO for use in the class project. It also provides a quick
        test/demo of the ingest data.
    </description>

   <!-- needed to resolve some hibernate dependencies -->
    <repositories>
        <repository>
            <id>jboss-nexus</id>
            <name>JBoss Nexus Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>eDmvBO</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.4</version>
            <scope>compile</scope>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.13</version>
            <scope>test</scope>
        </dependency>        
    </dependencies>

    <build>
         <!--tell the resource plugin to perform filtering on resources 
             to fill in JDBC URL, etc. -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <argLine>${surefire.argLine}</argLine>
                    <systemPropertyVariables>
                        <jdbc.driver>${jdbc.driver}</jdbc.driver>
                        <jdbc.url>${jdbc.url}</jdbc.url>
                        <jdbc.user>${jdbc.user}</jdbc.user>
                        <jdbc.password>${jdbc.password}</jdbc.password>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- this is an example of creating a reusable test archive -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <!-- include or exclude as appropriate -->
                            <includes>
                                <include>META-INF/persistence.xml</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile> <!-- defines our default database -->
            <id>hsql</id>
            <activation>
                <property> <!-- use this property to name another db -->
                    <name>!jdbcdb</name>
                </property>
            </activation>
            <properties>
                  <jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
                  <jdbc.url>jdbc:hsqldb:hsql://${db.host}:9001</jdbc.url>
                  <jdbc.user>sa</jdbc.user>
                  <jdbc.password />
                  <hibernate.dialect>
                      org.hibernate.dialect.HSQLDialect
                  </hibernate.dialect>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>1.8.0.4</version>
                    <scope>test</scope>
                </dependency>       
            </dependencies>
        </profile>


        <profile> <!-- defines our default persistence provider -->
            <id>hibernate</id>
            <activation>
                <property> <!-- use this property to name alt persistence provider -->
                    <name>!jpa</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-entitymanager</artifactId>
                    <version>${hibernate-entitymanager.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                    <version>${slf4j.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

    <profile>
      <id>testing</id>
      <activation>
        <property>
          <name>!maven.test.skip</name>
        </property>
      </activation>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>        
            <version>1.4</version>
            
            <dependencies>
              <dependency>
                <groupId>hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>1.8.0.4</version>            
              </dependency>
            </dependencies>
            
            <configuration>
              <username>${jdbc.user}</username>
              <password>${jdbc.password}</password>
              <driver>${jdbc.driver}</driver>
              <url>${jdbc.url}</url>          
            </configuration>
            
            <executions>
              <execution>
                <id>drop-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/target/classes</basedir>
                    <includes>
                      <include>ddl/*drop*.ddl</include>                  
                    </includes>
                  </fileset>
                  <!-- the tables may not exist when tests are run -->
                  <onError>continue</onError>
                </configuration>        
              </execution>
              
              <execution>
                <id>create-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/target/classes</basedir>
                    <includes>
                      <include>ddl/*create*.ddl</include>                  
                    </includes>
                  </fileset>
                  <print>true</print>
                </configuration>        
              </execution>
              
              <execution>
                <id>populate-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/target/test-classes</basedir>
                    <includes>
                      <include>ddl/*populate*.ddl</include>                  
                    </includes>
                  </fileset>
                </configuration>        
              </execution>
              
              <!--
            <execution>
                <id>drop-db-after-test</id>
                <phase>test</phase>
                <goals>
                    <goal>execute</goal>
                </goals>    
                <configuration>              
                    <autocommit>true</autocommit>
                    <fileset>
                        <basedir>${basedir}/src/main/resources</basedir>
                        <includes>
                            <include>ddl/*drop*.ddl</include>                  
                        </includes>
                    </fileset>
                </configuration>        
            </execution>
            -->
            </executions>
          </plugin>          

            <!-- this useful plugin can be used to automatically generate the
                 DB schema from the Java entity classes. Whether you use it
                 or not - it is very useful in sanity checking your JPA mappings

                 Change the persistenceunit element to match your persistence unit
                 name if you copy this.
                 -->
            <plugin>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>2.2</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>generate-drop-ddl</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                        <configuration>
                            <componentProperties>
                                <outputfilename>
                                    ${project.artifactId}-dropJPA.ddl
                                </outputfilename>
                                <drop>true</drop>
                                <create>false</create>
                            </componentProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-create-ddl</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                        <configuration>
                            <componentProperties>
                                <outputfilename>
                                    ${project.artifactId}-createJPA.ddl
                                </outputfilename>
                                <drop>false</drop>
                                <create>true</create>
                            </componentProperties>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <components>
                        <component>
                            <name>hbm2ddl</name>
                            <implementation>
                                jpaconfiguration
                            </implementation>
                            <outputDirectory>
                                target/classes/ddl
                            </outputDirectory>
                        </component>
                    </components>
                    <componentProperties>
                        <persistenceunit>
                            eDmvBO-test
                        </persistenceunit>
                        <export>false</export>
                        <format>true</format>
                    </componentProperties>
                </configuration>
            </plugin>
          
        </plugins>        
      </build>
    </profile>

    <profile>
        <id>jboss5</id>
        <dependencies>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>1.0</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </profile>
    <profile>
        <id>jboss6</id>
        <dependencies>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.0-api</artifactId>
                <version>1.0.0.Final</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </profile>
    </profiles>
</project>
