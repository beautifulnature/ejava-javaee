<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>ejava-javaee</artifactId>
    <groupId>ejava.javaee</groupId>
    <version>1.0.2007.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>ejava.javaee.dao</groupId>
  <artifactId>jdbcDAO</artifactId>
  <name>JDBC and Data Access Objects</name>
  <description>
    This module provides an basic example of using JDBC and SQL to map a 
    flat POJO to a database.
  </description>
  <version>1.0.2007.1-SNAPSHOT</version>
  <dependencies>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.0.4</version>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.0</version>
      <scope>test</scope>
    </dependency>        
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.13</version>
      <scope>test</scope>
    </dependency>    
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.4</version>
      <scope>test</scope>
    </dependency>       
    
  </dependencies>

  <build>
    <!-- filter resource files for profile-specific values -->
    <testResources>
        <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <excludes>
                <exclude>**/*-ant.xml</exclude>
            </excludes>
        </testResource>
        <testResource>
            <directory>src/test/resources</directory>
            <filtering>false</filtering>
            <includes>
                <include>**/*-ant.xml</include>
            </includes>
        </testResource>
    </testResources>

    <plugins>
          <!-- make sure we are building java5 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>      
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${surefire.argLine}</argLine>
          <systemProperties>
            <property>
              <name>jdbc.driver</name>
              <value>${jdbc.driver}</value>
            </property>
            <property>
              <name>jdbc.url</name>
              <value>${jdbc.url}</value>          
            </property>
            <property>
              <name>jdbc.user</name>
              <value>${jdbc.user}</value>          
            </property>
            <property>
              <name>jdbc.password</name>
              <value>${jdbc.password}</value>          
            </property>
          </systemProperties>
        </configuration>
      </plugin>            
    </plugins>    
  </build>
  
  <profiles>
        <profile> <!-- defines our default database -->
            <id>hsqldb</id>
            <activation>
                <property> <!-- use this property to name another db -->
                    <name>!jdbcdb</name>
                </property>
            </activation>
            <properties>
                  <jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
                  <jdbc.url>jdbc:hsqldb:hsql://localhost:9001</jdbc.url>
                  <jdbc.user>sa</jdbc.user>
                  <jdbc.password/>
            </properties>
        </profile>

    <profile>
      <id>testing</id>
      <activation>
        <property>
          <name>!maven.test.skip</name>
        </property>
      </activation>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>        
            <version>1.0-beta-2-ss1</version>
            
            <dependencies>
              <dependency>
                <groupId>hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>1.8.0.4</version>            
              </dependency>
            </dependencies>
            
            <configuration>
              <username>${jdbc.user}</username>
              <password>${jdbc.password}</password>
              <driver>${jdbc.driver}</driver>
              <url>${jdbc.url}</url>          
            </configuration>
            
            <executions>
              <execution>
                <id>drop-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/src/main/resources/ddl</basedir>
                    <includes>
                      <include>**/*drop*.ddl</include>                  
                    </includes>
                  </fileset>
                  <!-- the tables may not exist when tests are run -->
                  <onError>continue</onError>
                </configuration>        
              </execution>
              
              <execution>
                <id>create-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/src/main/resources/ddl</basedir>
                    <includes>
                      <include>**/*create*.ddl</include>                  
                    </includes>
                  </fileset>
                  <print>true</print>
                </configuration>        
              </execution>
              
              <execution>
                <id>populate-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/src/main/resources/ddl</basedir>
                    <includes>
                      <include>**/*populate*.ddl</include>                  
                    </includes>
                  </fileset>
                </configuration>        
              </execution>
              
              <!--
            <execution>
                <id>drop-db-after-test</id>
                <phase>test</phase>
                <goals>
                    <goal>execute</goal>
                </goals>    
                <configuration>              
                    <autocommit>true</autocommit>
                    <fileset>
                        <basedir>${basedir}/src/main/resources/ddl</basedir>
                        <includes>
                            <include>**/*drop*.ddl</include>                  
                        </includes>
                    </fileset>
                </configuration>        
            </execution>
              -->              
            </executions>
          </plugin>          

            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>ejava.examples.jdbc.ConnectDemo</mainClass>
                    <systemProperties>
                        <systemProperty>
                            <key>jdbc.driver</key>
                            <value>${jdbc.driver}</value>
                        </systemProperty>
                        <systemProperty>
                            <key>jdbc.url</key>
                            <value>${jdbc.url}</value>
                        </systemProperty>
                        <systemProperty>
                            <key>jdbc.user</key>
                            <value>${jdbc.user}</value>
                        </systemProperty>
                        <systemProperty>
                            <key>jdbc.password</key>
                            <value>""${jdbc.password}</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
            </plugin>
          
        </plugins>        
      </build>
    </profile>
  </profiles>
  
</project>
