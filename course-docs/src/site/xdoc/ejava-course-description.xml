<document>
  <properties>
    <title>Enterprise Java (605.784) Course Description</title>
    <author email="jcstaff@apl.jhu.edu">Jim Stafford</author>
  </properties>
  <body>
    <h4>Enterprise Java (605.784.31) Spring 2012</h4>
    <p>
      <ul>
        <li>Wednesdays, 4:30-7:10pm</li>
        <li>APL, K1</li>
      </ul>
    </p>
    <h5>Course Description</h5>
        <p> This course focuses on enterprise computing technologies using
        Java Enterprise Edition (Java EE).  The course focuses on how to
        build multi-tier distributed applications, specifically addressing the
        following areas: web access, business logic, data access, and applications
        supporting Enterprise Service technologies. The web access tier will focus
        on development using Servlets and JSP with an emphasis on integrating
        the web tier with enterprise applications. For the Business Logic Tier,
        session beans for synchronous business processing and message-driven beans
        and timers for asynchronous business processing will be described. The
        Data Access tier discussion will focus on Java Database Connectivity
        (JDBC), data access patterns, and the Java Persistence API. Finally,
        enterprise services will be described, including the Java Naming and
        Directory Interface (JNDI), Remote Method Invocation (RMI), Java
        Transaction API (JTA), Java EE Security, and Java Message Service
        (JMS).</p>

        <p> Using modern development tools, commercial persistence
        providers, and application servers, students will design and
        implement several significant programming projects using the
        above mentioned technologies and deploy them to a Java EE
        environment that they will manage.  </p>

    <h5>Student Background</h5>
    <ul>
      <li>Prerequisite: 605.481 Distributed Development on the 
          World Wide Web or equivalent.
      </li>
      <li>Strong Java programming skills are assumed.</li>
    </ul>

    <h5>Student Commitment</h5>
    <ul>
      <li>Students should be prepared to spend between 10-16 
          hours a week outside of class. 
      </li>
    </ul>

    <h5>Required Course Texts</h5>
    <ul>
      <li><a href="http://oreilly.com/catalog/9780596158033/preview#preview">
      Enterprise Java Beans 3.1, 6th Edition</a>;
        ISBN-10: 0596158025; ISBN-13: 978-0596158026;
        Andrew Lee Rubinger and Bill BurkePublisher;
        O'Reilly, September 2010
      </li>
    </ul>    

    <h5>Recommended Course Texts</h5>
    <ul>
      <li>A Servlet/JSP Text
        <ul>
          <li>Core Servlets and JavaServer Pages (JSP), 
          2nd Edition, Marty Hall, 2003, 
          Prentice Hall PTR; 
          ISBN 0130092290
          (<a href="http://pdf.coreservlets.com/">online version</a>)
          </li>
        </ul>
      </li>
    </ul>        

    <h5>Required Software</h5>
    <p>
      This course will make heavy use of development tools (Git, Maven
      3, JUnit, Log4j, and Eclipse), databases (Hypersonic; comes with
      JBoss), persistence providers (Hibernate; comes with JBoss),
      and application servers (JBoss AS 6).  Students are strongly
      encouraged to establish a local development environment. Detailed
      instructions for setup are part of the first exercise (<a
      href="./exercises/ex0.html">Development Environment Setup</a>).
    </p>
    
    <h5>References</h5>
    <p>
      The core of the EJB3 content is covered in the primary text for the
      course (and competing texts as well as online). Associated topics
      (database schema, JDBC, Web Tier, JMS, and tools) are not covered
      in the course text, but documentation will be provided through
      course slides, examples, and tutorials.  A list of online
      <a href="./links.html">references</a> can be found on this site.
      Each lecture will supply a list of references for that technical 
      area.
    </p>
    <h5>Grading</h5>
    <p>
      <ul>
        <li>
          100 &gt;= A &gt;= 90 &gt; B &gt;= 80 &gt; C &gt;= 70 &gt; F;
        </li>
        <li>
          Students will be graded on three projects.
          Projects will be done individually and graded 100 though 0.
        </li>
      </ul>
    </p>
    <p>
    <table>
      <tr>
        <th>Assessment</th>
        <th>% of Semester Grade</th>
      </tr>
      <tr>
        <td>Weekly Newsgroup Contribution</td>
        <td>10%</td>
      </tr>      
      <tr>
        <td>Project 1 Pre-submission</td>
        <td>5%</td>
      </tr>      
      <tr>
        <td>Project 1</td>
        <td>30%</td>
      </tr>      
      <tr>
        <td>Project 2</td>
        <td>30%</td>
      </tr>      
      <tr>
        <td>Project 3</td>
        <td>25%</td>
      </tr>      
    </table>      
    </p>
    <p>
      <ul>
        <li>A <b>weekly newsgroup contribution</b> may be a technical observation/lesson learned,
            a question that lead to a follow up from another student, or an
            answer/follow-up to another student's question. (This course is 
            less stressful and more rewarding if you start working earlier and
            collaborate with each other, the instructor, and grader(s).)</li>
        <li>A <b>project 1 pre-submission</b> is an in-progress copy of your project
            submitted to the instructor between class 03 and 06 for early
            comment. You must have attempted the stated TODO list matching 
            the week you submit. You may include comments or questions 
            regarding the incomplete work to help your grade. 
            </li>
      </ul>
    </p>
    
    <h5>Grading Policy</h5>
    <p>
      <ul>
        <li>
          <b>Late projects will be deducted 10pts/week late, starting 
          after the due date/time, with one exception.</b> 
          A student may submit a <b>single</b> 
          project up to 4 days late without receiving approval and still 
          receive complete credit. Students taking advantage of the 
          free first pass should still submit an e-mail to the graders
          notifying them of their intent.
        </li>
        <li>
          Projects must be submitted via e-mail to the graders with source 
          code in a zip file with a README. Pre-built artifacts must also 
          be included in the submission. All source code must be written to 
          portably compile in the grader's environment using Maven 2.
        </li>
        <li>
          Class attendance is <b>strongly</b> recommended, but not
          mandatory. The student is responsible for obtaining any written or
          oral information covered during their absence.
        </li>
      </ul>
    </p>
    
    <h5>Academic Integrity</h5>
    <p>
      <ul>
          <li>
          Collaboration of ideas and approaches are strongly encouraged.
          You may use partial solutions provided by others as a part of 
          your project submission. However, the bulk usage of another 
          students implementation or project will result in a 0 for the 
          project. There is a difference between sharing ideas/code snippets
          and turning in someone else's work as your own. When in doubt,
          document your sources.
        </li>
      </ul>
    </p>
    
    <h5>Instructor Availability</h5>
    <p>
        I am available 20min before class, breaks, and most times after class
        for interactive discussion. 

        I provide detailed answers to general/technical questions through the 
        course  
        <a href="http://groups.yahoo.com/group/ejava_class">newsgroup</a>.
        You can get individual/non-technical questions answered via 
        <a href="mailto:jcstaff@apl.jhu.edu">e-mail</a>.
        I usually have all questions posted by 9pm answered by COB that 
        evening.

        Students needing further assistance are also welcome to visit 
        <a href="http://www.sra.com">my office in Columbia</a> when necessary.
    </p>
  </body>
</document>

