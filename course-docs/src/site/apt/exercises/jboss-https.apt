Exercise: Enable JBoss HTTPS

* Goal/Objective

    * Enable use of HTTPS with JBoss.

* Steps

    [[1]] We will be following the instructions located on the 
    {{{http://www.jboss.org/community/wiki/Sslsetup}JBoss Wiki Page}}

    [[1]] Use the keytool program that is part of the JDK to generate a self-signed
    digital certificate and keystore for the server. Feel free to use different values 
    than shown below. However,

        * the file name and location must match the keystoreFile path you use in 
        server.xml in a later step.

        * the password used for the keystore must match the keystorePass used in
        server.xml in a later step.

        []

---
$ cd $JBOSS_HOME/server/(server)

default/conf> keytool -genkey -alias serverkeys -keyalg RSA -keystore ejava.keystore -storepass password -keypass password -dname "CN=jboss, OU=ejava, O=jhu, L=laurel, ST=md, C=usa"

default/conf> keytool -export -alias serverkeys -keystore ejava.keystore -storepass password -file ejava.cer
Certificate stored in file <ejava.cer>
---

    [[1]] Enable the SSL Port on JBoss/Tomcat by adding the following to
    standard/deploy/jbossweb.sar/server.xml

---
$ cat deploy/jbossweb.sar/server.xml

...
      <!-- SSL/TLS Connector configuration using the admin devl guide keystore
      -->
      <Connector protocol="HTTP/1.1" SSLEnabled="true" 
           port="${jboss.web.https.port}" address="${jboss.bind.address}"
           scheme="https" secure="true" clientAuth="false" 
           keystoreFile="${jboss.server.home.dir}/conf/ejava.keystore"
           keystorePass="password" sslProtocol = "TLS" />
...
---

    [[1]] Start/Restart JBoss.

    [[1]] Test the configuration by navigating to
    {{https://localhost:8443/jmx-console}} with the browser.
