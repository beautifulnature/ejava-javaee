<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>jmsCore</artifactId>
        <groupId>ejava.javaee.jmscore</groupId>
        <version>3.0.2012.2-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>jmsNotifier</artifactId>
    <packaging>jar</packaging>

    <name>JMS Notifier</name>
    <description>
        This project provides a small example of a notification application
        and N-number of non-durable and durable subscribers that use a JMS
        topic to distribute information.
    </description>

    <properties>
        <jms.host>localhost</jms.host>
        <jndi.host>${jms.host}</jndi.host>
        <hornetq.remoting.netty.host>${jms.host}</hornetq.remoting.netty.host>
        <jms.spawn>true</jms.spawn>
    </properties>


    <dependencies>
        <!-- core dependencies -->
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>jms</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
        <!-- brings in JBoss RMI dependencies -->
        <dependency>
            <groupId>ejava.common</groupId>
            <artifactId>jboss-rmi-client</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>    
        <dependency>
            <groupId>ejava.common</groupId>
            <artifactId>ejava-util</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>    

        <!-- brings in JBoss HornetQ dependencies -->
        <dependency>
            <groupId>org.hornetq</groupId>
            <artifactId>hornetq-jms-client</artifactId>
            <scope>test</scope>
        </dependency>


        <!-- test dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jmsMechanics</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jmsMechanics</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>    

        <!-- runtime dependencies required to run JMS server instance -->
        <dependency>
            <groupId>org.jboss.microcontainer</groupId>
            <artifactId>jboss-kernel</artifactId>
            <version>2.0.6.GA</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.hornetq</groupId>
            <artifactId>hornetq-bootstrap</artifactId>
            <version>${hornetq.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.hornetq</groupId>
            <artifactId>hornetq-core</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.hornetq</groupId>
            <artifactId>hornetq-jms</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnpserver</artifactId>
            <version>5.0.3.GA</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.netty</groupId>
            <artifactId>netty</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- filter resource files for profile-specific values -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/hornetq*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/hornetq*.xml</exclude>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <multi.message.count>${jmsmechanics.multi.message.count}</multi.message.count>
                        <jms.embedded>${jms.embedded}</jms.embedded>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <!-- create a classpath for our JSE clients to run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                 </executions>
            </plugin>      

            <!-- allocate an unused port for the JMS server -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                        <!--
                            <outputFile>${project.build.directory}/test-classes/ports.properties</outputFile>
                            -->
                            <portNames>
                                <portName>hornetq.remoting.netty.port</portName>
                                <portName>jndi.port</portName>
                                <portName>jndi.rmiport</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-jms-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <java classname="org.hornetq.integration.bootstrap.HornetQBootstrapServer"
                                     fork="true"
                                     spawn="${jms.spawn}">
                                     <classpath>
                                         <path location="${project.build.directory}/test-classes/hornetq"/>
                                         <path refid="maven.runtime.classpath"/>
                                     </classpath>
                                     <!--
                                     <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000 -Xnoagent"/>
                                     <sysproperty key="java.compiler" value="NONE"/>
                                     -->
                                     <sysproperty key="hornetq.config.dir" value="${project.build.directory}/test-classes/hornetq"/>
                                     <arg value="${project.build.directory}/test-classes/hornetq/hornetq-beans.xml"/>
                                </java>
                                <echo>started JMS Server</echo>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jms-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo>stopping JMS Server</echo>
                                <echo file="${project.build.directory}/test-classes/hornetq/STOP_ME"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                </dependencies>
            </plugin>

        </plugins>      
    </build>
</project>
