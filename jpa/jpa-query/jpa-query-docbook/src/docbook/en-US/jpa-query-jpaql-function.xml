<!DOCTYPE partintro PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="jpa-query-jpaql-function">
    <title>JPAQL Functions</title>
    <para></para>
        
    <section id="jpa-query-jpaql-function-string">
        <title>String Functions</title>
  
        <section id="jpa-query-jpaql-function-string-base">
            <title>Base Query</title>
<programlisting language=""><![CDATA[select c from Customer c where c.firstName='CAT']]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
 -executing query:
Hibernate: 
    select
        customer0_.CUSTOMER_ID as CUSTOMER1_3_,
        customer0_.FIRST_NAME as FIRST2_3_,
        customer0_.LAST_NAME as LAST3_3_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        customer0_.FIRST_NAME='CAT']]></programlisting>                        
            <itemizedlist>
                <listitem><para>No rows found because 'CAT' does not match anything because of case</para></listitem>
            </itemizedlist>
        </section>

        <section id="jpa-query-jpaql-function-string-lower">
            <title>LOWER</title>
<programlisting language=""><![CDATA[select c from Customer c where c.firstName=LOWER('CAT')]]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        customer0_.CUSTOMER_ID as CUSTOMER1_3_,
        customer0_.FIRST_NAME as FIRST2_3_,
        customer0_.LAST_NAME as LAST3_3_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        customer0_.FIRST_NAME=lower('CAT')
        
 -found result:firstName=cat, lastName=inhat]]></programlisting>                        
            <itemizedlist>
                <listitem><para>One customer found because case-sensitive compare now correct</para></listitem>
            </itemizedlist>
        </section>

        <section id="jpa-query-jpaql-function-string-upper">
            <title>UPPER</title>
<programlisting language=""><![CDATA[select UPPER(c.firstName) from Customer c where c.firstName=LOWER('CAT')]]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        upper(customer0_.FIRST_NAME) as col_0_0_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        customer0_.FIRST_NAME=lower('CAT')
        
 -found result:CAT]]></programlisting>                        
            <itemizedlist>
                <listitem><para>First name of customer located returned in upper case</para></listitem>
            </itemizedlist>
        </section>          

        <section id="jpa-query-jpaql-function-string-trim">
            <title>TRIM</title>
<programlisting language=""><![CDATA[select TRIM(LEADING 'c' FROM c.firstName) from Customer c where c.firstName='cat')]]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        trim(LEADING 'c' 
    FROM
        customer0_.FIRST_NAME) as col_0_0_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        customer0_.FIRST_NAME='cat'

 -found result:at
]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Customer's name, excluding initial 'c' character, returned</para></listitem>
            </itemizedlist>
        </section>
        
        <section id="jpa-query-jpaql-function-string-concat">
            <title>CONCAT</title>
<programlisting language=""><![CDATA[select c from Customer c where CONCAT(CONCAT(c.firstName,' '),c.lastName) ='cat inhat')]]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        customer0_.CUSTOMER_ID as CUSTOMER1_3_,
        customer0_.FIRST_NAME as FIRST2_3_,
        customer0_.LAST_NAME as LAST3_3_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        (
            (
                customer0_.FIRST_NAME||' '
            )||customer0_.LAST_NAME
        )='cat inhat'

 -found result:firstName=cat, lastName=inhat
]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Customer located after concatenation of fields yields match</para></listitem>
            </itemizedlist>
        </section>            

        <section id="jpa-query-jpaql-function-string-length">
            <title>LENGTH</title>
<programlisting language=""><![CDATA[select c from Customer c where LENGTH(c.firstName) = 3]]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        customer0_.CUSTOMER_ID as CUSTOMER1_3_,
        customer0_.FIRST_NAME as FIRST2_3_,
        customer0_.LAST_NAME as LAST3_3_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        length(customer0_.FIRST_NAME)=3

 -found result:firstName=cat, lastName=inhat]]></programlisting>                        
        <itemizedlist>
            <listitem><para>Customer found where length of firstName matches specified length criteria</para></listitem>
        </itemizedlist>
    </section>

        <section id="jpa-query-jpaql-function-string-locate">
            <title>LOCATE</title>
<programlisting language=""><![CDATA[]]>select c from Customer c where LOCATE('cat',c.firstName,2) > 0</programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        customer0_.CUSTOMER_ID as CUSTOMER1_3_,
        customer0_.FIRST_NAME as FIRST2_3_,
        customer0_.LAST_NAME as LAST3_3_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        locate('cat', customer0_.FIRST_NAME, 2)>0]]></programlisting>                        
            <itemizedlist>
                <listitem><para>No firstName found with 'cat' starting at position=2</para></listitem>
            </itemizedlist>
        
<programlisting language=""><![CDATA[select c from Customer c where LOCATE('at',c.firstName,2) > 1]]></programlisting>
        <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        customer0_.CUSTOMER_ID as CUSTOMER1_3_,
        customer0_.FIRST_NAME as FIRST2_3_,
        customer0_.LAST_NAME as LAST3_3_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        locate('at', customer0_.FIRST_NAME, 2)>1

 -found result:firstName=cat, lastName=inhat]]></programlisting>                        
        <itemizedlist>
            <listitem><para>firstName found with 'at' starting at a position 2</para></listitem>
        </itemizedlist>
    </section>
    
        <section id="jpa-query-jpaql-function-string-substring">
            <title>SUBSTRING</title>    
<programlisting language=""><![CDATA[select SUBSTRING(c.firstName,2,2) from Customer c where c.firstName = 'cat']]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        substring(customer0_.FIRST_NAME,
        2,
        2) as col_0_0_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        customer0_.FIRST_NAME='cat'
    -found result:at]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Return the two character substring of firstName starting at position two</para></listitem>
            </itemizedlist>

<programlisting language=""><![CDATA[select c from Customer c where SUBSTRING(c.firstName,2,2) = 'at']]></programlisting>
            <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        customer0_.CUSTOMER_ID as CUSTOMER1_3_,
        customer0_.FIRST_NAME as FIRST2_3_,
        customer0_.LAST_NAME as LAST3_3_ 
    from
        JPAQL_CUSTOMER customer0_ 
    where
        substring(customer0_.FIRST_NAME, 2, 2)='at'
        
 -found result:firstName=cat, lastName=inhat]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Find the customer with a two characters starting a position two of firstName equaling  'at'</para></listitem>
            </itemizedlist>
        </section>
    </section>




    <section id="jpa-query-jpaql-function-date">
        <title>Date Functions</title>
        <itemizedlist>
            <listitem><para>CURRENT_DATE</para></listitem>
            <listitem><para>CURRENT_TIME</para></listitem>
            <listitem><para>CURRENT_TIMESTAMP</para></listitem>
        </itemizedlist>
  
<programlisting language=""><![CDATA[select s from Sale s
where s.date < CURRENT_DATE]]></programlisting>
        <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        sale0_.SALE_ID as SALE1_1_,
        sale0_.amount as amount1_,
        sale0_.BUYER_ID as BUYER3_1_,
        sale0_.date as date1_,
        sale0_.SALE_STORE as SALE5_1_ 
    from
        JPAQL_SALE sale0_ 
    where
        sale0_.date<CURRENT_DATE
...
 -found result:date=1998-04-10 10:13:35, amount=$100.00, buyer=1, clerks(1)={1, }
...
 -found result:date=1999-06-11 14:15:10, amount=$150.00, buyer=2, clerks(2)={1, 2, }]]></programlisting>                            
        <itemizedlist>
            <listitem><para>Located two Sales that occurred prior to today's date</para></listitem>
        </itemizedlist>

<programlisting language=""><![CDATA[select s from Sale s
where s.date = CURRENT_DATE]]></programlisting>
        <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    select
        sale0_.SALE_ID as SALE1_1_,
        sale0_.amount as amount1_,
        sale0_.BUYER_ID as BUYER3_1_,
        sale0_.date as date1_,
        sale0_.SALE_STORE as SALE5_1_ 
    from
        JPAQL_SALE sale0_ 
    where
        sale0_.date=CURRENT_DATE]]></programlisting>                            
        <itemizedlist>
            <listitem><para>Located no sales on today's date</para></listitem>
        </itemizedlist>

<programlisting language=""><![CDATA[update Sale s
set s.date = CURRENT_DATE]]></programlisting>
        <para>Runtime output</para>
<programlisting language=""><![CDATA[
Hibernate: 
    update
        JPAQL_SALE 
    set
        date=CURRENT_DATE]]></programlisting>                            
        <itemizedlist>
            <listitem><para>Update all sales to today</para></listitem>
        </itemizedlist>

<programlisting language=""><![CDATA[select s from Sale s
where s.date = CURRENT_DATE]]></programlisting>

        <para>Runtime output</para>
<programlisting language=""><![CDATA[
 -executing query:select s from Sale s where s.date = CURRENT_DATE
Hibernate: 
    select
        sale0_.SALE_ID as SALE1_1_,
        sale0_.amount as amount1_,
        sale0_.BUYER_ID as BUYER3_1_,
        sale0_.date as date1_,
        sale0_.SALE_STORE as SALE5_1_ 
    from
        JPAQL_SALE sale0_ 
    where
        sale0_.date=CURRENT_DATE
...
 -found result:date=2013-06-05 00:00:00, amount=$100.00, buyer=1, clerks(1)={1, }
...
 -found result:date=2013-06-05 00:00:00, amount=$150.00, buyer=2, clerks(2)={1, 2, }]]></programlisting>                            
        <itemizedlist>
            <listitem><para>Now locating sales for today's date</para></listitem>
        </itemizedlist>
        
        <note>
            <para>Bulk commands (i.e., update) invalidate cached entities. You must refresh their
                state with the database or detach/clear them from the persistence context to 
                avoid using out-dated information.</para>
        </note>
    </section>





    <section id="jpa-query-jpaql-function-orderby">
        <title>Order By</title>
        <para></para>
  
<programlisting language=""><![CDATA[
]]></programlisting>

        <itemizedlist>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>

        <para>Runtime output</para>
<programlisting language=""><![CDATA[
]]></programlisting>                            
    </section>

    <section id="jpa-query-jpaql-function-aggregate">
        <title>Aggregate Functions</title>
        <para></para>
  
<programlisting language=""><![CDATA[
]]></programlisting>

        <itemizedlist>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>

        <para>Runtime output</para>
<programlisting language=""><![CDATA[
]]></programlisting>                            
    </section>

    <section id="jpa-query-jpaql-function-having">
        <title>Having</title>
        <para></para>
  
<programlisting language=""><![CDATA[
]]></programlisting>

        <itemizedlist>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>

        <para>Runtime output</para>
<programlisting language=""><![CDATA[
]]></programlisting>                            
    </section>

    <section id="jpa-query-jpaql-function-groupby">
        <title>Group By</title>
        <para></para>
  
<programlisting language=""><![CDATA[
]]></programlisting>

        <itemizedlist>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>

        <para>Runtime output</para>
<programlisting language=""><![CDATA[
]]></programlisting>                            
    </section>


<!-- 
    <section id="jpa-query-jpaql-group-">
        <title></title>
        <para></para>
  
<programlisting language=""><![CDATA[
]]></programlisting>

        <itemizedlist>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>

        <para>In programming context</para>
<programlisting language="java"><![CDATA[
]]></programlisting>                            

        <para>Runtime output</para>
<programlisting language=""><![CDATA[
]]></programlisting>                            
    </section>
 -->




    <section id="jpa-query-jpaql-function-summary">
       <title>Summary</title>
        <itemizedlist>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
    </section>    
</chapter>
  
