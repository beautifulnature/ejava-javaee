<!DOCTYPE partintro PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="jpa-validation-core">
    <title>Core Validation API</title>
    <para></para>
        
    <section id="jpa-validation-core-goals">
        <title>Validation Goals</title>
        <itemizedlist>
            <listitem><para>Independent of other APIs (e.g., persistence, web-tier)</para></listitem>
            <listitem><para>Available server-side and client-side</para></listitem>
            <listitem><para>Provide validation metadata thru annotations and XML descriptors</para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
    </section>


    <section id="jpa-validation-core-constraints">
        <title>Constraints</title>
        <para></para>
  
        <section id="jpa-validation-core-constraints-annotation">
            <title>Annotating Class</title>
            <itemizedlist>
                <listitem><para></para>
<programlisting language=""><![CDATA[
]]></programlisting>                        
                </listitem>
            </itemizedlist>
        </section>

        <section id="jpa-validation-core-constraints-validation">
            <title>Validating Instances</title>
            <itemizedlist>
                <listitem><para></para>
<programlisting language=""><![CDATA[
]]></programlisting>                        
                </listitem>
            </itemizedlist>
        </section>

    </section>

    <section id="jpa-validation-core-groups">
        <title>Constraint Groups</title>

        <section id="jpa-validation-core-groups-what">
            <title>Uses</title>
            <itemizedlist>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
        </section>

        <section id="jpa-validation-core-groups-definition">
            <title>Defining Groups</title>
<programlisting language="java"><![CDATA[
package ejava.jpa.example.validation;
import javax.validation.groups.Default;

public interface Drivers extends Default {}
]]></programlisting>                        
<programlisting language="java"><![CDATA[
package ejava.jpa.example.validation;
import javax.validation.groups.Default;

public interface POCs extends Default {}
]]></programlisting>                        
        </section>

        <section id="jpa-validation-core-groups-applied">
            <title>Groups Applied to Classes</title>
            <itemizedlist>
                <listitem><para></para>
<programlisting language=""><![CDATA[
]]></programlisting>                        
                </listitem>
            </itemizedlist>
        </section>

        <section id="jpa-validation-core-groups-validation">
            <title>Validating with Groups</title>
            <itemizedlist>
                <listitem><para></para>
<programlisting language=""><![CDATA[
]]></programlisting>                        
                </listitem>
            </itemizedlist>
        </section>


    </section>

    <section id="jpa-validation-core-custom">
        <title>Custom Validators</title>

        <section id="jpa-validation-core-custom-annotation">
            <title>Annotation</title>
<programlisting language="java"><![CDATA[
package ejava.jpa.example.validation;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import static java.lang.annotation.ElementType.*;
import static java.lang.annotation.RetentionPolicy.*;
import javax.validation.Constraint;
import javax.validation.Payload;

/**
 * Defines a constraint annotation for expressing a minimum age.
 */
@Documented
@Constraint(validatedBy={MinAgeValidator.class})
@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER})
@Retention(RUNTIME)
public @interface MinAge {
    String message() default "too young";
    Class<?>[] groups() default {};
    Class<? extends Payload>[] payload() default{};
    int age() default 0;
}]]></programlisting>                        
            <itemizedlist>
                <listitem><para>@Documented adds this spec to API spec of what it annotates</para></listitem>
                <listitem><para>@Constraint defines validator class</para></listitem>
                <listitem><para>@Target defines what can be assigned to</para>
                    <itemizedlist>
                        <listitem><para>FIELD - attributes</para></listitem>
                        <listitem><para>METHOD - getters</para></listitem>
                        <listitem><para>TYPE - classes</para></listitem>
                        <listitem><para>ANNOTATION_TYPE - constraints composing other constraints</para></listitem>
                        <listitem><para>PARAMETER - no support required by spec</para></listitem>
                        <listitem><para>CONSTRUCTOR - no support required by spec</para></listitem>
                    </itemizedlist>
                </listitem>
                <listitem><para>Several reserved properties</para>
                    <itemizedlist>
                        <listitem><para>message() - used to create error message</para></listitem>
                        <listitem><para>groups() - defines which groups constraint member of. Defaults to Default group</para></listitem>
                        <listitem><para>payload() - defines association for constraint</para>
                            <itemizedlist>
                                <listitem><para></para>
 <programlisting language=""><![CDATA[@MinAge(age=16, payload=Severity.Critical.class)
private Date birthDate;]]></programlisting>                        
 <programlisting language=""><![CDATA[@NotNull(payload=Severity.Warning.class)
private Date voterRegistrationDate;]]></programlisting>                                                        
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem><para>names starting with "valid" - reserved/not allowed</para></listitem>
                    </itemizedlist>
                </listitem>
                <listitem><para>Define use-specific properties (i.e., age)</para></listitem>
                <listitem><para>Optionally define annotation for multiple annotations</para>
<programlisting language="java"><![CDATA[
public @interface MinAge {
...
    /**
     * Defines an array of annotations so that more than one can be applied.
     */
    @Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER})
    @Retention(RUNTIME)
    @Documented
    public @interface List {
        MinAge[] value();
    } 
}]]></programlisting>                        
                </listitem>
            </itemizedlist>
        </section>

        <section id="jpa-validation-core-custom-validator">
            <title>Validator</title>
<programlisting language="java"><![CDATA[
package ejava.jpa.example.validation;
...
import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

public class MinAgeValidator implements ConstraintValidator<MinAge, Date>{
    int minAge;

    @Override
    public void initialize(MinAge constraint) {
        this.minAge = constraint.age();
    }

    @Override
    public boolean isValid(Date date, ConstraintValidatorContext ctx) {
        if (date==null) { return true; }

        Calendar latestBirthDate = new GregorianCalendar();
        latestBirthDate.add(Calendar.YEAR, -1*minAge);
        
        Calendar birthDate = new GregorianCalendar();
        birthDate.setTime(date);

        if (birthDate.after(latestBirthDate)) {
            String errorMsg = String.format("%d is younger than minimum %d", 
                    getAge(birthDate), 
                    minAge);
            ctx.buildConstraintViolationWithTemplate(errorMsg)
                .addConstraintViolation();
            return false;
        } else {
            return true;
        }
    }
...
}]]></programlisting>                        
            <itemizedlist>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
        </section>

        <section id="jpa-validation-core-custom-applied">
            <title>Applied to Class</title>
<programlisting language="java"><![CDATA[
public class Person {
...
    @NotNull(groups={Drivers.class, POCs.class})
    @MinAge.List({
        @MinAge(age=18, groups=POCs.class),
        @MinAge(age=16, groups=Drivers.class)
    })
    private Date birthDate;
...]]></programlisting>                        
            <itemizedlist>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
        </section>

        <section id="jpa-validation-core-custom-validation">
            <title>Example Usage</title>
<programlisting language="java"><![CDATA[
Calendar fifteen = new GregorianCalendar();
fifteen.add(Calendar.YEAR, -16);
fifteen.add(Calendar.DAY_OF_YEAR, 2);

Person p = new Person()
    .setFirstName("Bob")
    .setLastName("Smith")
    .setBirthDate(fifteen.getTime());

Set<ConstraintViolation<Person>> violations = val.validate(p, Drivers.class);
for (ConstraintViolation<Person> v : violations) {
    log.debug(v.getPropertyPath() + ":" + v.getInvalidValue() + " " + v.getMessage());
}
...
assertFalse("valid driver", violations.isEmpty());]]></programlisting>                        
            <itemizedlist>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
<programlisting language=""><![CDATA[
 -birthDate:Wed Jun 11 01:06:33 EDT 1997, 15 is younger than minimum 16
 -birthDate:Wed Jun 11 01:06:33 EDT 1997, too young
]]></programlisting>                        
        </section>

    </section>


    <section id="jpa-validation-core-composite">
        <title>Composite Constraints</title>
        
        <section id="jpa-validation-core-composite-multiple">
            <title>Multiple Constraints</title>
<programlisting language="java"><![CDATA[
public class Person {
...
    @NotNull
    @Size(min=1,max=12)
    @Pattern(regexp="^[a-zA-Z\\ \\-]+$", message="invalid characters in name")
    private String firstName;
    
    @NotNull
    @Size(min=1,max=20)
    @Pattern(regexp="^[a-zA-Z\\ \\-]+$", message="invalid characters in name")
    private String lastName;
]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Multiple constraints makeup complete definition</para></listitem>
                <listitem><para>Verbose and tedious to define multiple times</para></listitem>
            </itemizedlist>
        </section>


        <section id="jpa-validation-core-composite-single">
            <title>Replace With Composite</title>
<programlisting language="java"><![CDATA[
public class Person {
...
    @ValidName(min=1, max=12, regexp="^[a-zA-Z\\ \\-]+$", message="invalid first name")
    private String firstName;    
...
    @ValidName(min=1, max=20, regexp="^[a-zA-Z\\ \\-]+$", message="invalid last name")
    private String lastName;
]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Would like to replace with something simpler</para></listitem>
            </itemizedlist>
        </section>


        <section id="jpa-validation-core-composite-annotation">
            <title></title>
<programlisting language="java"><![CDATA[
...
/**
 * Defines a validation composition
 */
@NotNull
@Size
@Pattern(regexp="")

@Documented
@Constraint(validatedBy={})
@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER})
@Retention(RUNTIME)
public @interface ValidName {
    String message() default "invalid name";
    Class<?>[] groups() default {};
    Class<? extends Payload>[] payload() default{};
    @OverridesAttribute(constraint=Size.class, name="min") int min() default 0;
    @OverridesAttribute(constraint=Size.class, name="max") int max() default Integer.MAX_VALUE;
    @OverridesAttribute(constraint=Pattern.class, name="regexp") String regexp() default ".*";

    /**
     * Defines an array of annotations so that more than one can be applied.
     */
    @Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER})
    @Retention(RUNTIME)
    @Documented
    public @interface List {
        ValidName[] value();
    } 
}]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Annotate a composite constraint annotation with the building blocks</para></listitem>
                <listitem><para>Define attribute overrides as appropriate</para></listitem>
            </itemizedlist>
        </section>



        <section id="jpa-validation-core-composite-">
            <title>Composed Validations Individually Reported</title>
<programlisting language="java"><![CDATA[
Person p = new Person()
    .setFirstName("Bob")
    .setLastName("Smithhhhhhhhhhhhhhhhhh$%$%$$$$$$$$$$$$$$$$");

Set<ConstraintViolation<Person>> violations = val.validate(p);
for (ConstraintViolation<Person> v : violations) {
    log.debug(v.getPropertyPath() + ":" + v.getInvalidValue() + " " + v.getMessage());
}
]]></programlisting>                        
<programlisting language=""><![CDATA[
-lastName:Smithhhhhhhhhhhhhhhhhh$%$%$$$$$$$$$$$$$$$$ size must be between 1 and 20
-lastName:Smithhhhhhhhhhhhhhhhhh$%$%$$$$$$$$$$$$$$$$ must match "^[a-zA-Z\ \-]+$"]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Bean failed two composed constraints</para></listitem>
            </itemizedlist>
        </section>


        <section id="jpa-validation-core-composite-singlex">
            <title>@ReportAsSingleViolation</title>
<programlisting language="java"><![CDATA[
@NotNull
@Size
@Pattern(regexp="")
@ReportAsSingleViolation

...
public @interface ValidName {
]]></programlisting>                        
<programlisting language=""><![CDATA[
 -lastName:Smithhhhhhhhhhhhhhhhhh$%$%$$$$$$$$$$$$$$$$ invalid last name]]></programlisting>                        
            <itemizedlist>
                <listitem><para>Bean failed single composite constraint</para></listitem>
            </itemizedlist>
        </section>
    </section>



    <section id="jpa-validation-core-">
        <title></title>
        <para></para>
  
        <itemizedlist>

            <listitem><para></para>
<programlisting language=""><![CDATA[
]]></programlisting>                        
            </listitem>

        </itemizedlist>
        <para></para>
    </section>


    <section id="jpa-validation-core-summary">
       <title>Summary</title>
        <itemizedlist>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
    </section>    
</chapter>
  
