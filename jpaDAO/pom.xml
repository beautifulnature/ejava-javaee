<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>ejava-javaee</artifactId>
    <groupId>ejava.javaee</groupId>
    <version>1.0.2010.2-SNAPSHOT</version>
  </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

  <modelVersion>4.0.0</modelVersion>
  <groupId>ejava.javaee.dao</groupId>
  <artifactId>jpaDAO</artifactId>
  <name>Java Persistance API</name>
  <description>
    This module provides an basic example of using the Java Persistence API
    to map a flat POJO to a database.
  </description>
  <version>1.0.2010.2-SNAPSHOT</version>
  <dependencies>
    <!-- core dependencies -->
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.0.4</version>
      <scope>compile</scope>
    </dependency>

    <!-- core project testing dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.6</version>
      <scope>test</scope>
    </dependency>        
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.13</version>
      <scope>test</scope>
    </dependency>    
  </dependencies>

  <build>
     <!--tell the resource plugin to perform filtering on resources 
         to fill in JDBC URL, etc. -->
    <testResources>
        <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
        </testResource>
    </testResources>
    <plugins>
          <!-- make sure we are building java5 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>      

          <!-- set test JVM root classpath so persistence framework
              can locate entities during classpath scan -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
                <argLine>${surefire.argLine}</argLine>
                <systemProperties>
                    <property>
                        <name>java.class.path</name>
                        <value>target/classes</value>
                    </property>
                </systemProperties>
            </configuration>
        </plugin>

    </plugins>      
  </build>

    <profiles>
        <profile> <!-- defines our default database -->
            <id>hsql</id>
            <activation>
                <property> <!-- use this property to name another db -->
                    <name>jdbcdb</name>
                    <value>hsql</value>
                </property>
            </activation>
            <properties>
                  <jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
                  <jdbc.url>jdbc:hsqldb:hsql://localhost:9001</jdbc.url>
                  <jdbc.user>sa</jdbc.user>
                  <jdbc.password />
                  <hibernate.dialect>
                      org.hibernate.dialect.HSQLDialect
                  </hibernate.dialect>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>1.8.0.4</version>
                    <scope>test</scope>
                </dependency>       
            </dependencies>
        </profile>
        <profile> <!-- defines our default database -->
            <id>mysql</id>
            <activation>
                <property> <!-- use this property to name another db -->
                    <name>jdbcdb</name>
                    <value>mysql</value>
                </property>
            </activation>
            <properties>
                  <jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
                  <jdbc.url>jdbc:mysql://localhost:3306/test</jdbc.url>
                  <jdbc.user>jboss</jdbc.user>
                  <jdbc.password>password</jdbc.password>
                  <hibernate.dialect>
                      org.hibernate.dialect.MySQLDialect
                  </hibernate.dialect>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.0.5</version>
                    <scope>test</scope>
                </dependency>       
            </dependencies>
        </profile>


        <profile> <!-- defines our default persistence provider -->
            <id>hibernate</id>
            <activation>
                <property> <!-- use this property to name alt persistence provider -->
                    <name>!jpa</name>
                </property>
            </activation>

           <!-- needed to resolve some hibernate dependencies -->
            <repositories>
                <repository>
                    <id>jboss-repo</id>
                    <name>JBoss Maven Repository</name>
                    <url>http://repository.jboss.org/maven2</url>
                </repository>
            </repositories>

            <dependencies>
                <dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-entitymanager</artifactId>
                    <version>3.4.0.GA</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                    <version>1.5.2</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
