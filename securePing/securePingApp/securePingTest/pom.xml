<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>securePingApp</artifactId>
        <groupId>ejava.javaee.secureping</groupId>
        <version>2.0.2011.2-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>securePingTest</artifactId>
    <packaging>jar</packaging>

    <name>Secure Ping Remote Test</name>
    <properties>
        <admin.username>admin1</admin.username>
        <admin.password>password</admin.password>
        <user.username>user1</user.username>
        <user.password>password</user.password>
    </properties>

    <dependencies>
        <!-- core dependencies -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- include this to compile tests -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>securePingEJB</artifactId>
            <version>${project.version}</version>
            <type>ejb-client</type>
            <scope>test</scope>
        </dependency>

        <!-- package being deployed must be a scope=compile dependency -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>securePingEAR</artifactId>
            <version>${project.version}</version>
            <type>ear</type>
            <scope>compile</scope>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>    
    </dependencies>

    <build>
        <!-- filter test/resource files for profile-specific valies -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
              <!-- tell it to run, even though we are a pom project -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${surefire.argLine}</argLine>
                    <systemPropertyVariables>
                        <jndi.name.secureping>
                            ejava/examples/secureping/SecurePingEJB/remote
                        </jndi.name.secureping>
                        <java.security.auth.login.config>
                file://${basedir}/target/test-classes/securePingTest-auth.conf
                        </java.security.auth.login.config>
                        <skip.flush>${skip.flush}</skip.flush>
                        <admin.username>${admin.username}</admin.username>
                        <admin.password>${admin.password}</admin.password>
                        <user.username>${user.username}</user.username>
                        <user.password>${user.password}</user.password>
                        <jmx.username>${jboss.user}</jmx.username>
                        <jmx.password>${jboss.password}</jmx.password>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

        </plugins>      
    </build>

    <profiles>        
<profile>
    <id>jboss</id>
    <activation>
        <property>
            <name>!server</name>
        </property>
    </activation>
    <properties>
          <java.naming.factory.initial>org.jnp.interfaces.NamingContextFactory
          </java.naming.factory.initial>
          <java.naming.provider.url>jnp://${jboss.host}:1099
          </java.naming.provider.url>
          <java.naming.factory.url.pkgs>org.jboss.naming:org.jnp.interfaces
          </java.naming.factory.url.pkgs>
          <jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
          <jdbc.url>jdbc:hsqldb:hsql://${db.host}:9001</jdbc.url>
          <jdbc.user>sa</jdbc.user>
          <jdbc.password />
    </properties>

    <dependencies>
            <!-- needed to make JMX calls -->
        <dependency>
            <groupId>org.jboss.jbossas</groupId>
            <artifactId>jboss-as-server</artifactId>
            <classifier>jmx-invoker-adaptor-client</classifier>
            <scope>compile</scope>
        </dependency>
            <!-- needed to make RMI calls -->
        <dependency>
            <groupId>org.jboss.jbossas</groupId>
            <artifactId>jboss-as-client</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>        
            
            <dependencies>
              <dependency>
                <groupId>hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>            
              </dependency>
            </dependencies>
            
            <configuration>
              <username>${jdbc.user}</username>
              <password>${jdbc.password}</password>
              <driver>${jdbc.driver}</driver>
              <url>${jdbc.url}</url>          
            </configuration>
            
            <executions>
              <execution>
                <id>drop-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/target</basedir>
                    <includes>
                      <include>test-classes/ddl/*drop*.ddl</include>                  
                    </includes>
                  </fileset>
                  <onError>continue</onError>
                </configuration>        
              </execution>

              <execution>
                <id>create-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/target</basedir>
                    <includes>
                      <include>test-classes/ddl/*create*.ddl</include>                  
                    </includes>
                  </fileset>
                  <print>true</print>
                </configuration>        
              </execution>
              
              <execution>
                <id>populate-db-before-test</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>    
                <configuration>              
                  <autocommit>true</autocommit>
                  <fileset>
                    <basedir>${basedir}/target</basedir>
                    <includes>
                      <include>test-classes/ddl/populate*.ddl</include>                  
                    </includes>
                  </fileset>
                </configuration>        
              </execution>
          </executions>
        </plugin>

        <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <configuration>
                <deployer>
                    <type>remote</type>
                    <deployables>
                        <deployable>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>securePingEAR</artifactId>
                            <type>ear</type>
                        </deployable>
                    </deployables>
                </deployer>
            </configuration>
            <executions>
                <execution>
                    <id>deploy-component</id>
                    <phase>test-compile</phase>
                    <goals>
                        <goal>deploy</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>                    

        </plugins>
    </build>
</profile>

    </profiles>
</project>
