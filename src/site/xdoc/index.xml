<?xml version="1.0"?>
<document>
  <properties>
    <title>Enterprise Java (605.784.31) Root</title>
    <author email="jcstaff@apl.jhu.edu">jcstaff@apl.jhu.edu</author>
  </properties>
  <body>
    <section name="Enterprise Java (605.784.31) Root">
      <p>
      This is the course home page for the Enterprise Java Course
      (605.784), taught at John's Hopkins University, Engineering
      Programs for Professionals.  

      This site will be populated as the
      semester progresses and topics are addressed. If you are looking
      for a version of the full content for ejava-javaee, refer to
      <a href="http://webdev.apl.jhu.edu/~jcs/legacy-ejava-javaee">
      http://webdev.apl.jhu.edu/~jcs/legacy-ejava-javaee</a>.
      </p>
      <subsection name="What's New" id="whatsnew">
      <ul>
          <li>2008-02-13: Posted JPA materials</li>
          <li>2008-02-04: Posted JDBC materials</li>
          <li>2008-01-28: Posted initial class site</li>
      </ul>
      </subsection>
      <subsection name="Class To Do" id="todo">
      <ul>
          <li>map your business objects to the database for
          objects/properties and tables/columns. Mark relationships as
          @Transient at this point. Test the ability to create, find,
          update, and delete each object type.</li>
          <li>continue with the JDBC ingest implementation</li>
          <li>make sure your JDBC mapping and JPA mapping stay consistent</li>
          <li><b>send a zip file of your project, in any consistent state, to
          the instructor for a sanity check. Include comments on where
          you believe you are relative to the project and the weekly class todo
          list.</b></li>
      </ul>
      </subsection>
      <subsection name="Things you should have finished!" id="completed">
      <ul>
      <li><ul>
          <li>complete the structure of the JDBC Ingest DAO within the "DAO" project;
          to continue to mature over time</li>
          <li>create JPA DAO(s) implementation classes for your projects;
          design how they get a shared EntityManager and implement the CRUD methods;
          provide a persistence.xml file; define all Collections to
          be @Transient and observed the default behavior of mapping classes.</li>
      </ul></li>
      <li><ul>
          <li>read through project description and post any clarification
          questions</li>
          <li>go through JDBC tutorial and use this project to try out any
          JDBC/SQL cwcommands you had questions on</li>
          <li>look through the example BO and DAO thread for the project</li>
          <li>start your project directory tree</li>
          <li>design your project business objects within the "BO" project areas;
          provide unit tests</li>
          <li>create the schema file for a portion of the project; to mature over 
          time</li>
          <li>create the structure of the JDBC Ingest DAO within the "DAO" project;
          to mature over time</li>
          <li>built your project from the root; all supplied artifacts should build 
          and test correctly</li>
      </ul></li>
      <li><ul>
        <li></li>
          <li>register for newsgroup and setup e-mail handling (all e-mails will have
          ejava_class in subject)</li>
          <li>post at least 1 test message to newsgroup</li>
          <li>setup development environment by going through exercises 0 and 1</li>
      </ul></li>

      </ul>
      </subsection>
    </section>
  </body>
</document>
